name: Players
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/players
    metadata:
      groupName: Players
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET /players → lista de jogadores com dados básicos'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      level_min:
        name: level_min
        description: 'Opcional. Nível mínimo dos jogadores a serem listados.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      level_max:
        name: level_max
        description: 'Opcional. Nível máximo dos jogadores a serem listados.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone:
        name: zone
        description: 'Opcional. Zona a ser filtrada.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Opcional. Campo pelo qual a lista será ordenada.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort_dir:
        name: sort_dir
        description: 'Opcional. Direção da ordenação.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Opcional. Número de jogadores por página.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Opcional. Número da página a ser exibida.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      level_min: 16
      level_max: 16
      zone: architecto
      sort_by: architecto
      sort_dir: architecto
      per_page: 16
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "player_id": "p2",
                      "name": "\"Quest",
                      "level": 25,
                      "current_zone": "AncientRuins",
                      "total_score": 0,
                      "total_xp": 0,
                      "total_gold": 0,
                      "deaths": 0,
                      "kills": 0,
                      "bosses_defeated": 0,
                      "quests_completed": 0,
                      "last_seen": "2025-08-09T22:48:46.000000Z",
                      "created_at": "2025-08-09T22:48:39.000000Z",
                      "updated_at": "2025-08-09T22:48:46.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/players/{playerId}/stats'
    metadata:
      groupName: Players
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET /players/:id/stats → estatísticas de um jogador'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      playerId:
        name: playerId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      playerId: architecto
    queryParameters:
      player_id:
        name: player_id
        description: 'O ID do jogador.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      player_id: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "player_info": {
                      "player_id": "p2",
                      "name": "\"Quest",
                      "level": 25,
                      "current_zone": "AncientRuins",
                      "total_score": 0,
                      "total_xp": 0,
                      "total_gold": 0,
                      "deaths": 0,
                      "kills": 0,
                      "bosses_defeated": 0,
                      "quests_completed": 0,
                      "last_seen": "2025-08-09T22:48:46.000000Z",
                      "created_at": "2025-08-09T22:48:39.000000Z",
                      "updated_at": "2025-08-09T22:48:46.000000Z"
                  },
                  "combat_stats": {
                      "total_score": 0,
                      "kills": 0,
                      "deaths": 0,
                      "kd_ratio": 0,
                      "bosses_defeated": 0
                  },
                  "progression_stats": {
                      "total_xp": 0,
                      "total_gold": 0,
                      "quests_completed": 0
                  },
                  "activity_stats": {
                      "total_events": 0,
                      "chat_messages": 0,
                      "items_collected": 0,
                      "zones_visited": 0
                  },
                  "recent_activity": [
                      {
                          "timestamp": "2025-08-09T22:48:46.000000Z",
                          "category": "combat",
                          "event_type": "BOSS_DEFEAT",
                          "description": "Derrotou Boss e ganhou 0 XP e 0 gold"
                      }
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/leaderboard
    metadata:
      groupName: Players
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET /leaderboard → ranking de jogadores por pontuação'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'Opcional. Tipo de ranking a ser exibido.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Opcional. Número máximo de jogadores a serem exibidos.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      type: architecto
      limit: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "type": "score",
                  "leaderboard": [
                      {
                          "rank": 1,
                          "player_id": "p1",
                          "name": "Jogador 1",
                          "level": 30,
                          "value": 1500,
                          "last_seen": "2025-08-09T22:48:46.000000Z"
                      },
                      {
                          "rank": 2,
                          "player_id": "p2",
                          "name": "Jogador 2",
                          "level": 28,
                          "value": 1200,
                          "last_seen": "2025-08-09T22:48:46.000000Z"
                      }
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
